var extend = require("extend");
var Error = require("elegant-error");
function Sync(target) {
    this._target = target;
    this.queue = [];
    this._ready;
    this._error;
}
Sync.prototype.start = function () {
    var error;
    var data;
    try {
        data = this._target._execute();
    } catch (e) {
        this._target.exception = error = e;
    }

    if (error && this._error) {
        data = this._error.apply(this._target);
        this._target.complete.apply(this._target, [data]);
    } else if (error) {
        data = new Error(500);
        this._target.complete.apply(this._target, [data]);
    } else {
        if (this.queue.length < 1) {
            this.$(function () {
            }, data)();
        }
    }

    return this._target;
};
Sync.prototype.ready = function (fun) {
    this._ready = fun;
    return this._target;
};
Sync.prototype.error = function (fun) {
    this._error = fun;
    return this._target;
};
Sync.prototype.$ = function (fun, data) {
    var self = this;
    self.queue.push(fun);
    return function () {
        var _arguments = new Array();
        if (arguments) {
            for (var i = 0; i < arguments.length; i++) {
                _arguments.push(arguments[i]);
            }
        }
        if (data) {
            if (typeof data == "string") {
                _arguments.push(data);
            } else {
                for (var i = 1; i < data.length; i++) {
                    _arguments.push(data[i]);
                }
            }
        }
        var error;
        try {
            fun.apply(self._target, _arguments);
        } catch (e) {
            if (this._target) {
                this._target.exception = error = e;
            } else {
                console.log(e);
            }
        }

        var index = self.queue.indexOf(fun);
        self.queue.splice(index, 1);

        if (self.queue.length == 0) {
            if (error && self._error) {
                data = self._error.apply(self._target);
            } else if (error) {
                data = new Error(500);
            } else if (self._ready) {
                data = self._ready.apply(self._target);
            }
            self._target.complete.apply(self._target, [data]);
        }

    }
}
module.exports = Sync;